---
- name: openssh | Add the OS specific variables
  ansible.builtin.include_vars:
    file: "{{ hostvars[inventory_hostname]['ansible_os_family'] + '.yml' }}"
- name: openssh | Set facts about openssh role
  ansible.builtin.set_fact:
    openssh_restart_method: "{{ hostvars[inventory_hostname]['openssh'] |
      community.general.json_query('[].restart_method | [0]') }}"
    openssh_settings: "{{ hostvars[inventory_hostname]['openssh'] |
      community.general.json_query('[].settings[]') }}"
    openssh_settings_authorized_keys_command_content: "{{
      hostvars[inventory_hostname]['openssh'] | community.general.json_query('
      [].settings[].authorized_keys_command_content | [0]') }}"
- name: openssh | Assert that restart method variable have proper value
  ansible.builtin.assert:
    that:
      - "vars['openssh_restart_method'] in ['reload', 'restart']"
    msg: "OpenSSH restart method must be in 'reload' or 'restart'."
    quiet: "true"
  when:
    - "vars['openssh_restart_method'] is defined"
- name: openssh | Set service restart method when restart method is defined
  ansible.builtin.set_fact:
    openssh_restart_cmd: "{{ vars['openssh_restart_method'] + 'ed' }}"
  when:
    - "vars['openssh_restart_method'] is defined"
- name: openssh | Set service restart method to SIGHUP
  ansible.builtin.set_fact:
    openssh_restart_cmd: "reloaded"
  when:
    - "vars['openssh_restart_method'] is not defined"
- name: openssh | Create ssh directory
  ansible.builtin.file:
    path: "{{ hostvars[inventory_hostname]['openssh_dest'] }}"
    state: "directory"
    owner: "root"
    group: "root"
    mode: "0755"
- name: ssh_users | Assert that target group variable is defined
  assert:
    that:
      - "hostvars[inventory_hostname]['target_group'] is defined"
      - "hostvars[inventory_hostname]['target_group'] != ''"
    msg: "Target group is not defined."
    quiet: "true"
